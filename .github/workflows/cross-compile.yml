name: Cross-Compile Native Extensions

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name for the PR (optional)'
        required: false
        default: 'cross-compile-binaries'
      pr_title:
        description: 'Pull request title (optional)'
        required: false
        default: 'Add cross-compiled native extensions'

jobs:
  cross-compile:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        architecture: [x86_64-linux, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7.8'
        bundler-cache: true
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install dependencies
      run: bundle install
      
    - name: Run cross-compilation for ${{ matrix.architecture }}
      run: |
        if [ "${{ matrix.architecture }}" = "macos-latest" ]; then
          PLATFORM="aarch64-linux"
        else
          PLATFORM="${{ matrix.architecture }}"
        fi
        RUBY_CC_VERSION=2.7.8 bundle exec rb-sys-dock --platform $PLATFORM -- bash -c \
        "bundle install && bundle exec rake native:magnus_multi_build:${{ matrix.architecture }} && mv -f tmp/${{ matrix.architecture }}/stage/lib/magnus_multi_build/magnus_multi_build.so lib/magnus_multi_build/${{ matrix.architecture }}/magnus_multi_build.so"
      
    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: magnus_multi_build-${{ matrix.architecture }}
        path: lib/magnus_multi_build/${{ matrix.architecture }}/magnus_multi_build.so

  create-pr:
    needs: cross-compile
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Organize binaries
      run: |
        mkdir -p lib/magnus_multi_build/x86_64-linux
        mkdir -p lib/magnus_multi_build/aarch64-linux
        cp artifacts/magnus_multi_build-x86_64-linux/magnus_multi_build.so lib/magnus_multi_build/x86_64-linux/
        cp artifacts/magnus_multi_build-aarch64-linux/magnus_multi_build.so lib/magnus_multi_build/aarch64-linux/
        
    - name: Check for compiled binaries
      run: |
        echo "Checking for compiled binaries..."
        find lib/magnus_multi_build -name "*.so" -type f
        ls -la lib/magnus_multi_build/*/
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Create feature branch
      run: |
        BRANCH_NAME="${{ github.event.inputs.branch_name }}"
        if [ -z "$BRANCH_NAME" ]; then
          BRANCH_NAME="cross-compile-binaries-$(date +%Y%m%d-%H%M%S)"
        else
          # If branch name is provided, make it unique with timestamp to avoid conflicts
          BRANCH_NAME="${BRANCH_NAME}-$(date +%Y%m%d-%H%M%S)"
        fi
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        git checkout -b "$BRANCH_NAME"
        
    - name: Add compiled binaries
      run: |
        git add lib/magnus_multi_build/*/magnus_multi_build.so
        
    - name: Check if there are changes to commit
      id: verify-changed-files
      run: |
        if git diff --cached --quiet; then
          echo "No changes to commit"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit changes
      if: steps.verify-changed-files.outputs.changes == 'true'
      run: |
        git commit -m "Add cross-compiled native extensions for multiple architectures
        
        - Built for x86_64-linux and aarch64-linux in parallel
        - Generated using cross_compile.sh with rb-sys-dock
        - Ready for multi-platform gem distribution
        
        ðŸ¤– Generated with GitHub Actions"
        
    - name: Push branch
      if: steps.verify-changed-files.outputs.changes == 'true'
      run: |
        git push origin "$BRANCH_NAME"
        
    - name: Create Pull Request
      if: steps.verify-changed-files.outputs.changes == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_TITLE="${{ github.event.inputs.pr_title }}"
        if [ -z "$PR_TITLE" ]; then
          PR_TITLE="Add cross-compiled native extensions"
        fi
        
        gh pr create \
          --title "$PR_TITLE" \
          --body "## Summary
        
        This PR adds cross-compiled native extensions for multiple architectures:
        
        - **x86_64-linux**: Intel/AMD 64-bit Linux
        - **aarch64-linux**: ARM 64-bit Linux
        
        ## Changes
        
        - Added \`lib/magnus_multi_build/x86_64-linux/magnus_multi_build.so\`
        - Added \`lib/magnus_multi_build/aarch64-linux/magnus_multi_build.so\`
        
        ## Build Process
        
        These binaries were generated using:
        1. \`cross_compile.sh\` script with parallel builds
        2. \`rb-sys-dock\` containerized cross-compilation
        3. Magnus crate for Rust-Ruby bindings
        
        ## Testing
        
        To test these binaries:
        
        \`\`\`bash
        # For x86_64-linux
        export MAGNUS_TARGET_ARCH=x86_64-linux
        ruby -r magnus_multi_build -e \"puts RustStringUtils.reverse('Hello')\"
        
        # For aarch64-linux  
        export MAGNUS_TARGET_ARCH=aarch64-linux
        ruby -r magnus_multi_build -e \"puts RustStringUtils.reverse('World')\"
        \`\`\`
        
        ðŸ¤– Generated with GitHub Actions" \
          --head "$BRANCH_NAME" \
          --base main
          
    - name: No changes summary
      if: steps.verify-changed-files.outputs.changes == 'false'
      run: |
        echo "::notice::No changes detected. Cross-compilation may have failed or binaries already exist."
        echo "Check the cross-compilation logs above for details."